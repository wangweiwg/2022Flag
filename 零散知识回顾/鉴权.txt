鉴权必须了解的5个兄弟：cookie、session、token、jwt、单点登录

* 基于HTTP的前端鉴权背景
* cookie为什么是最方便的存储方案，有哪些操作cookie的方式
* session方案是如何实现的，存在哪些问题
* token方案是如何实现的，如何进行编码和防篡改？jwt是做什么的？refresh token的实现和意义
* session和token有什么异同和优缺点
* 单点登录是什么？实现思路和在浏览器下的处理

从状态说起：
    HTTP是无状态的。也就是说，HTTP请求方和响应方间无法维护状态，都是一次性的，它不知道前后的请求都发生了什么。
但有的场景下，我们需要维护状态。最典型的，一个用户登录微博，发布、关注、评论，都是再登录后的用户状态下。解决办法是
标记。

前端存储：
* 最锉的，挂到全局变量上，但是这个刷新页面就没了。
* 高端点的，存到cookie、localStorage里面，无论怎么刷新，只要浏览器没有清掉或者过期，就一直拿到这个状态

基石：cookie
cookie存储相比localStorage等其他方式，借助HTTP头、浏览器能力，cookie可以做到前端无感知。
一般过程是：
* 在提供标记的接口，通过HTTP返回的Set-Cookie字段，直接种到浏览器上
* 浏览器发起请求时，会自动把cookie通过HTTP请求头的Cookie字段，带给接口

* cookie是要限制：空间范围的，通过Domain、Path两级。Domain属性指定浏览器发出HTTP请求时，哪些域名要附带这个Cookie。
如果没有指定该属性，浏览器会默认将其设置为当前URL的一级域名，比如http://www.example.com会设置为http://example.com，
而且以后如果访问http://example.com的任何子域名，HTTP请求也会带上这个Cookie。如果服务器在Set-Cookie字段指定的域名，
不属于当前域名，浏览器会拒绝这个Cookie。Path属性是HTTP请求路径的开头一部分，就会在头信息里面带上这个Cookie。比如，PATH
属性是/，那么请求/docs路径也会包含该Cookie。当然，前提是域名必须一致。

* cookie还可以限制时间范围，通过Expires、Max-Age中的一种。Expires属性指定一个具体的到期时间，到了指定时间以后，
浏览器就不再保留这个 Cookie。它的值是 UTC 格式。如果不设置该属性，或者设为null，Cookie 只在当前会话（session）有效，
浏览器窗口一旦关闭，当前 Session 结束，该 Cookie 就会被删除。另外，浏览器根据本地时间，决定 Cookie 是否过期，
由于本地时间是不精确的，所以没有办法保证 Cookie 一定会在服务器指定的时间过期。Max-Age属性指定从现在开始 Cookie 存在的秒数，
比如60 * 60 * 24 * 365（即一年）。过了这个时间以后，浏览器就不再保留这个 Cookie。如果同时指定了Expires和Max-Age，
那么Max-Age的值将优先生效。如果Set-Cookie字段没有指定Expires或Max-Age属性，那么这个 Cookie 就是 Session Cookie，
即它只在本次对话存在，一旦用户关闭浏览器

* cookie 可以限制: Secure属性指定浏览器只有在加密协议 HTTPS 下，才能将这个 Cookie 发送到服务器。另一方面，
如果当前协议是 HTTP，浏览器会自动忽略服务器发来的Secure属性。该属性只是一个开关，不需要指定值。如果通信是 HTTPS 协议，
该开关自动打开。HttpOnly属性指定该 Cookie 无法通过 JavaScript 脚本拿到，主要是Document.cookie属性、XMLHttpRequest对象和
Request API 都拿不到该属性。这样就防止了该 Cookie 被脚本读到，只有浏览器发出 HTTP 请


「HTTP 头对 cookie 的读写」**回过头来，HTTP 是如何写入和传递 cookie 及其配置的呢？HTTP 返回的一个 Set-Cookie 头用于向浏览器写入cookie，
格式为 cookie 键值 + 配置键值。
Set-Cookie: username=jimu; domain=jimu.com; path=/blog; Expires=Wed, 21 Oct 2015 07:28:00 GMT; Secure; HttpOnly

那我想一次多 set 几个 cookie 怎么办？多给几个 Set-Cookie 头（一次 HTTP 请求中允许重复）

HTTP 请求的 Cookie 头用于浏览器把符合当前「空间、时间、使用方式」配置的所有 cookie 一并发给服务端。因为由浏览器做了筛选判断，就不需要归还配置内容了，只要发送键值就可以


