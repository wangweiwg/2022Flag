Vue和React的区别：

共同点：数据驱动视图、组件化、Virtual DOM

1、数据驱动：在jQuery时代，我们需要频繁的操作DOM来实现与界面的交互；而Vue和React解决了这一痛点，
采用数据驱动视图的方式，隐藏操作DOM的频繁操作。所以在开发时，只需要关注数据变化即可，但是二者实现
方式不尽相同

2、组件化：Vue和React都遵循组件化思想，他们把注意力都放在UI层，将页面细分为不同的组件。组件之间
的组合嵌套就形成最后的网页界面。

3、Virtual DOM：Vue与React都使用了Virtual DOM + diff 算法，不管是Vue的template模板 + options api写法，
还是React 的class或者Function写法，最后都是生成render函数，而render函数执行返回VNode（虚拟DOM的数据结构，本质
上是棵树）

render函数 ---> 生成VNode ---> 新老VNode diff算法对比 ---> 更新真是DOM


不同点：
Vue和React两者虽然都是用于构建用户界面的框架，但是也有很大差异，首先两者的核心思想不同

1、核心思想不同：
Vue早期开发就是尤雨溪大佬，所以定位就是尽可能降低前端开发的门槛，让更多的人能够更快上手开发。
这就是Vue的主要特点，灵活易用的渐进式框架，进行数据拦截/代理，它对侦测数据的变化更敏感、更精准。

React从一开始的定位就是提出UI开发的思路，由Facebook开源，而且React想要做的是用更好的方式去颠覆
前端开发方式。所以React推崇函数式编程（纯组件），数据不可变以及单向数据流，当然需要双向的地方也可以手动
实现，比如借助onchange和setState来实现

2、组件写法差异
React推荐的做法是JSX + inline style，也就是HTML 和CSS全都写进JavaScript中，即 all in js，Vue推荐的做法是
template的单文件组件格式（简单易懂，从传统前端转过来易于理解），即html、css、js写在同一个文件中

这个差异一定程度上也是由于二者核心思想不同而导致的


3、diff算法不同
传统diff算法是循环递归每一个节点，复杂度太高。vue2.x加入了Virtual Dom和React拥有相同的diff 优化原则（将算法复杂度降为O(n)）


两者思路上类似的：
* 不同组件产生不同的DOM结构，当type不相同时，对应DOM操作就是直接销毁老的DOM，创建新的DOM
* 同一层次的一组节点，可以通过唯一的key区分
